package com.equifax.dibibatch.gcp.varizon_cnx_keying.sql;

public class ExtractStDsFuzzyRespToLoadVztDataShareSql {

	public static final String UPDATE_VZT_DATASHARE_TABLE = "UPDATE {{1}}.VZT_DATASHARE  SET\r\n" + 
			"EFX_BILL_MATCHED_DS_ID = CASE   WHEN ? IS NULL THEN  EFX_BILL_MATCHED_DS_ID  ELSE ? END,\r\n" + 
			"EFX_BILL_CNX_ID = CASE   WHEN ? IS NULL THEN  EFX_BILL_CNX_ID  ELSE ? END,\r\n" + 
			"EFX_BILL_HHLD_ID = CASE   WHEN ? IS NULL THEN  EFX_BILL_HHLD_ID  ELSE ? END,\r\n" + 
			"EFX_BILL_ADDR_ID = CASE   WHEN ? IS NULL THEN  EFX_BILL_ADDR_ID  ELSE ? END,\r\n" + 
			"EFX_BILL_CONF_CD = CASE   WHEN ? IS NULL THEN  EFX_BILL_CONF_CD  ELSE ? END,\r\n" + 
			"EFX_BILL_MATCHED_SOURCE = CASE   WHEN ? IS NULL THEN  EFX_BILL_MATCHED_SOURCE  ELSE 'FUZZY' END,\r\n" + 
			"EFX_BILL_CNX_ERROR_CODE = CASE   WHEN ? IS NULL THEN  EFX_BILL_CNX_ERROR_CODE ELSE NULL END, \r\n" + 
			"EFX_SVC_MATCHED_DS_ID = CASE   WHEN ? IS NULL THEN  EFX_SVC_MATCHED_DS_ID  ELSE ? END,\r\n" + 
			"EFX_SVC_CNX_ID = CASE   WHEN ? IS NULL THEN  EFX_SVC_CNX_ID  ELSE ? END,\r\n" + 
			"EFX_SVC_HHLD_ID = CASE   WHEN ? IS NULL THEN  EFX_SVC_HHLD_ID  ELSE ? END,\r\n" + 
			"EFX_SVC_ADDR_ID = CASE   WHEN ? IS NULL THEN  EFX_SVC_ADDR_ID  ELSE ? END,\r\n" + 
			"EFX_SVC_CONF_CD = CASE   WHEN ? IS NULL THEN  EFX_SVC_CONF_CD  ELSE ? END,\r\n" + 
			"EFX_SVC_MATCHED_SOURCE = CASE   WHEN ? IS NULL THEN  EFX_SVC_MATCHED_SOURCE  ELSE 'FUZZY' END,\r\n" + 
			"EFX_SVC_CNX_ERROR_CODE = CASE   WHEN ? IS NULL THEN  EFX_SVC_CNX_ERROR_CODE ELSE NULL END,\r\n" + 
			"EFX_BEST_KEY_SOURCE = CASE ?  WHEN 'H' THEN  'B'  ELSE CASE ?  WHEN 'H' THEN  'S'  ELSE EFX_BEST_KEY_SOURCE END END,\r\n" + 
			"EFX_CNX_MODIFY_BATCH_ID = ?,\r\n" + 
			"EFX_CNX_MODIFY_DT = current_date,\r\n" + 
			"MODIFIED_BY = ?\r\n" + 
			"WHERE \r\n" + 
			"DATASHARE_ID = ?";
	
			

	public static final String SELECT_JOIN_SOURCE_DS_ID = "SELECT  SUBSTRING(A.DATASHARE_ID FROM 2 FOR 20) AS DATASHARE_ID , A.B_MATCHED_DS_ID AS B_MATCHED_DS_ID, A.B_CNX_ID AS B_CNX_ID, A.B_HHLD_ID AS B_HHLD_ID, A.B_ADDR_ID AS B_ADDR_ID, A.B_CONF_CD AS B_CONF_CD,  B.S_MATCHED_DS_ID AS S_MATCHED_DS_ID, B.S_CNX_ID AS S_CNX_ID, B.S_HHLD_ID AS S_HHLD_ID, B.S_ADDR_ID AS S_ADDR_ID,B.S_CONF_CD AS S_CONF_CD FROM A RIGHT OUTER JOIN B ON SUBSTRING(A.DATASHARE_ID FROM 2 FOR 20) = SUBSTRING(B.DATASHARE_ID FROM 2 FOR 20) WHERE  SUBSTRING(A.DATASHARE_ID FROM 1 FOR 1) = 'B' AND SUBSTRING(B.DATASHARE_ID FROM 1 FOR 1) = 'S'"; 
						
}